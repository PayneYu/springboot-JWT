server.port=8080
spring.application.name=sharding-springboot-mybatis
# mybatis
mybatis.mapper-locations=classpath*:mapper/**/*.xml
# \u6570\u636E\u6E90 db0,db1,db2
sharding.jdbc.datasource.names=db0
# \u6570\u636E\u6E90ds0
sharding.jdbc.datasource.db0.type=com.zaxxer.hikari.HikariDataSource
sharding.jdbc.datasource.db0.driver-class-name=com.mysql.cj.jdbc.Driver
sharding.jdbc.datasource.db0.jdbc-url=jdbc:mysql://localhost:3306/db0?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
sharding.jdbc.datasource.db0.username=root
sharding.jdbc.datasource.db0.password=1234
# \u7B2C\u4E8C\u4E2A\u6570\u636E\u5E93
#sharding.jdbc.datasource.db1.type=com.zaxxer.hikari.HikariDataSource
#sharding.jdbc.datasource.db1.driver-class-name=com.mysql.cj.jdbc.Driver
#sharding.jdbc.datasource.db1.jdbc-url=jdbc:mysql://localhost:3306/db1?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
#sharding.jdbc.datasource.db1.username=root
#sharding.jdbc.datasource.db1.password=1234

sharding.jdbc.config.sharding.default-data-source-name=db0
sharding.jdbc.config.sharding.binding-tables=t_user

# \u6C34\u5E73\u62C6\u5206\u7684\u6570\u636E\u5E93\uFF08\u8868\uFF09 \u914D\u7F6E\u5206\u5E93 + \u5206\u8868\u7B56\u7565 \u884C\u8868\u8FBE\u5F0F\u5206\u7247\u7B56\u7565
# \u5206\u5E93\u7B56\u7565
#sharding.jdbc.config.sharding.default-database-strategy.inline.sharding-column=id
#sharding.jdbc.config.sharding.default-database-strategy.inline.algorithm-expression=db$->{id % 2}
#\u6570\u636E\u8282\u70B9,\u5747\u5300\u5206\u5E03
#sharding.jdbc.config.sharding.tables.t_user.actualDataNodes=db$->{0..1}.t_user${0..1}
sharding.jdbc.config.sharding.tables.t_user.actualDataNodes=db0.t_user${0..1}
sharding.jdbc.config.sharding.tables.t_user.keyGeneratorColumnName=id
#\u5206\u8868\u7B56\u7565 \u884C\u8868\u8FBE\u5F0F
sharding.jdbc.config.sharding.tables.t_user.tableStrategy.inline.shardingColumn=sex
#\u5206\u8868\u7B56\u7565 \u6309\u6A21\u8FD0\u7B97\u5206\u914D
sharding.jdbc.config.sharding.tables.t_user.tableStrategy.inline.algorithmExpression=t_user$->{sex.equalsIgnoreCase("M")?0:1}

# \u6253\u5370\u6267\u884C\u7684\u6570\u636E\u5E93\u4EE5\u53CA\u8BED\u53E5
sharding.jdbc.config.sharding.props.sql.show=true
spring.main.allow-bean-definition-overriding=true
